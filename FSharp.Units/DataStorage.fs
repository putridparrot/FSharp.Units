// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

namespace FSharp.Units

open Microsoft.FSharp.Core

module DataStorage =

    /// Bits (b) units
    [<Measure>]
    type b =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<b> value
        /// Converts the supplied Bits value to Kilobits
        static member toKilobits(value : float<b>) = k.create(float value / 1000.0)
        /// Converts the supplied Bits value to Megabits
        static member toMegabits(value : float<b>) = Mb.create(float value / 1e+6)
        /// Converts the supplied Bits value to Gigabits
        static member toGigabits(value : float<b>) = Gb.create(float value / 1e+9)
        /// Converts the supplied Bits value to Terabits
        static member toTerabits(value : float<b>) = Tb.create(float value / 1e+12)
        /// Converts the supplied Bits value to Kilobytes
        static member toKilobytes(value : float<b>) = KB.create(float value / 8000.0)
        /// Converts the supplied Bits value to Megabytes
        static member toMegabytes(value : float<b>) = MB.create(float value / 8e+6)
        /// Converts the supplied Bits value to Gigabytes
        static member toGigabytes(value : float<b>) = GB.create(float value / 8e+9)
        /// Converts the supplied Bits value to Terabytes
        static member toTerabytes(value : float<b>) = TB.create(float value / 8e+12)
        /// Converts the supplied Bits value to Kibibits
        static member toKibibits(value : float<b>) = kibibit.create(float value / 1024.0)
        /// Converts the supplied Bits value to Mebibits
        static member toMebibits(value : float<b>) = mebibit.create(float value / 1048576.0)
    and /// Gigabits (Gb) units
        [<Measure>] Gb =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<Gb> value
        /// Converts the supplied Gigabits value to Bits
        static member toBits(value : float<Gb>) = b.create(float value * 1e+9)
        /// Converts the supplied Gigabits value to Kilobits
        static member toKilobits(value : float<Gb>) = k.create(float value * 1e+6)
        /// Converts the supplied Gigabits value to Megabits
        static member toMegabits(value : float<Gb>) = Mb.create(float value * 1000.0)
        /// Converts the supplied Gigabits value to Terabits
        static member toTerabits(value : float<Gb>) = Tb.create(float value / 1000.0)
        /// Converts the supplied Gigabits value to Kilobytes
        static member toKilobytes(value : float<Gb>) = KB.create(float value * 125000.0)
        /// Converts the supplied Gigabits value to Megabytes
        static member toMegabytes(value : float<Gb>) = MB.create(float value * 125.0)
        /// Converts the supplied Gigabits value to Gigabytes
        static member toGigabytes(value : float<Gb>) = GB.create(float value / 8.0)
        /// Converts the supplied Gigabits value to Terabytes
        static member toTerabytes(value : float<Gb>) = TB.create(float value / 8000.0)
        /// Converts the supplied Gigabits value to Kibibits
        static member toKibibits(value : float<Gb>) = kibibit.create(float value * 976562.5)
        /// Converts the supplied Gigabits value to Mebibits
        static member toMebibits(value : float<Gb>) = mebibit.create(float value * 954.0)
    and /// Gigabytes (GB) units
        [<Measure>] GB =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<GB> value
        /// Converts the supplied Gigabytes value to Bits
        static member toBits(value : float<GB>) = b.create(float value * 8e+9)
        /// Converts the supplied Gigabytes value to Kilobits
        static member toKilobits(value : float<GB>) = k.create(float value * 8e+6)
        /// Converts the supplied Gigabytes value to Megabits
        static member toMegabits(value : float<GB>) = Mb.create(float value * 8000.0)
        /// Converts the supplied Gigabytes value to Gigabits
        static member toGigabits(value : float<GB>) = Gb.create(float value * 8.0)
        /// Converts the supplied Gigabytes value to Terabits
        static member toTerabits(value : float<GB>) = Tb.create(float value / 125.0)
        /// Converts the supplied Gigabytes value to Kilobytes
        static member toKilobytes(value : float<GB>) = KB.create(float value * 1e+6)
        /// Converts the supplied Gigabytes value to Megabytes
        static member toMegabytes(value : float<GB>) = MB.create(float value * 1000.0)
        /// Converts the supplied Gigabytes value to Terabytes
        static member toTerabytes(value : float<GB>) = TB.create(float value / 1000.0)
        /// Converts the supplied Gigabytes value to Kibibits
        static member toKibibits(value : float<GB>) = kibibit.create(float value * 7812500.0)
        /// Converts the supplied Gigabytes value to Mebibits
        static member toMebibits(value : float<GB>) = mebibit.create(float value * 7629.39)
    and /// Kibibits (kibibit) units
        [<Measure>] kibibit =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<kibibit> value
        /// Converts the supplied Kibibits value to Bits
        static member toBits(value : float<kibibit>) = b.create(float value * 1024.0)
        /// Converts the supplied Kibibits value to Kilobits
        static member toKilobits(value : float<kibibit>) = k.create(float value * 1.024)
        /// Converts the supplied Kibibits value to Megabits
        static member toMegabits(value : float<kibibit>) = Mb.create(float value / 976.563)
        /// Converts the supplied Kibibits value to Gigabits
        static member toGigabits(value : float<kibibit>) = Gb.create(float value / 976562.5)
        /// Converts the supplied Kibibits value to Terabits
        static member toTerabits(value : float<kibibit>) = Tb.create(float value / 976562500.0)
        /// Converts the supplied Kibibits value to Kilobytes
        static member toKilobytes(value : float<kibibit>) = KB.create(float value / 7.812)
        /// Converts the supplied Kibibits value to Megabytes
        static member toMegabytes(value : float<kibibit>) = MB.create(float value / 7812.5)
        /// Converts the supplied Kibibits value to Gigabytes
        static member toGigabytes(value : float<kibibit>) = GB.create(float value / 7812500.0)
        /// Converts the supplied Kibibits value to Terabytes
        static member toTerabytes(value : float<kibibit>) = TB.create(float value / 7812500000.0)
        /// Converts the supplied Kibibits value to Mebibits
        static member toMebibits(value : float<kibibit>) = mebibit.create(float value / 1024.0)
    and /// Kilobits (k) units
        [<Measure>] k =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<k> value
        /// Converts the supplied Kilobits value to Bits
        static member toBits(value : float<k>) = b.create(float value * 1000.0)
        /// Converts the supplied Kilobits value to Megabits
        static member toMegabits(value : float<k>) = Mb.create(float value / 1000.0)
        /// Converts the supplied Kilobits value to Gigabits
        static member toGigabits(value : float<k>) = Gb.create(float value / 1e+6)
        /// Converts the supplied Kilobits value to Terabits
        static member toTerabits(value : float<k>) = Tb.create(float value / 1e+9)
        /// Converts the supplied Kilobits value to Kilobytes
        static member toKilobytes(value : float<k>) = KB.create(float value / 8.0)
        /// Converts the supplied Kilobits value to Megabytes
        static member toMegabytes(value : float<k>) = MB.create(float value / 8000.0)
        /// Converts the supplied Kilobits value to Gigabytes
        static member toGigabytes(value : float<k>) = GB.create(float value / 8e+6)
        /// Converts the supplied Kilobits value to Terabytes
        static member toTerabytes(value : float<k>) = TB.create(float value / 8e+9)
        /// Converts the supplied Kilobits value to Kibibits
        static member toKibibits(value : float<k>) = kibibit.create(float value / 1.024)
        /// Converts the supplied Kilobits value to Mebibits
        static member toMebibits(value : float<k>) = mebibit.create(float value / 1048.58)
    and /// Kilobytes (KB) units
        [<Measure>] KB =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<KB> value
        /// Converts the supplied Kilobytes value to Bits
        static member toBits(value : float<KB>) = b.create(float value * 8000.0)
        /// Converts the supplied Kilobytes value to Kilobits
        static member toKilobits(value : float<KB>) = k.create(float value * 8.0)
        /// Converts the supplied Kilobytes value to Megabits
        static member toMegabits(value : float<KB>) = Mb.create(float value / 125.0)
        /// Converts the supplied Kilobytes value to Gigabits
        static member toGigabits(value : float<KB>) = Gb.create(float value / 125000.0)
        /// Converts the supplied Kilobytes value to Terabits
        static member toTerabits(value : float<KB>) = Tb.create(float value / 1.25e+8)
        /// Converts the supplied Kilobytes value to Megabytes
        static member toMegabytes(value : float<KB>) = MB.create(float value / 1000.0)
        /// Converts the supplied Kilobytes value to Gigabytes
        static member toGigabytes(value : float<KB>) = GB.create(float value / 1e+6)
        /// Converts the supplied Kilobytes value to Terabytes
        static member toTerabytes(value : float<KB>) = TB.create(float value / 1e+9)
        /// Converts the supplied Kilobytes value to Kibibits
        static member toKibibits(value : float<KB>) = kibibit.create(float value * 7.812)
        /// Converts the supplied Kilobytes value to Mebibits
        static member toMebibits(value : float<KB>) = mebibit.create(float value * 0.00762939)
    and /// Mebibits (mebibit) units
        [<Measure>] mebibit =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<mebibit> value
        /// Converts the supplied Mebibits value to Bits
        static member toBits(value : float<mebibit>) = b.create(float value * 1048576.0)
        /// Converts the supplied Mebibits value to Kilobits
        static member toKilobits(value : float<mebibit>) = k.create(float value * 1048.58)
        /// Converts the supplied Mebibits value to Megabits
        static member toMegabits(value : float<mebibit>) = Mb.create(float value * 1.04858)
        /// Converts the supplied Mebibits value to Gigabits
        static member toGigabits(value : float<mebibit>) = Gb.create(float value / 954.0)
        /// Converts the supplied Mebibits value to Terabits
        static member toTerabits(value : float<mebibit>) = Tb.create(float value / 953674.0)
        /// Converts the supplied Mebibits value to Kilobytes
        static member toKilobytes(value : float<mebibit>) = KB.create(float value / 0.00762939)
        /// Converts the supplied Mebibits value to Megabytes
        static member toMegabytes(value : float<mebibit>) = MB.create(float value / 7.62939)
        /// Converts the supplied Mebibits value to Gigabytes
        static member toGigabytes(value : float<mebibit>) = GB.create(float value / 7629.39)
        /// Converts the supplied Mebibits value to Terabytes
        static member toTerabytes(value : float<mebibit>) = TB.create(float value * 0.000000131072)
        /// Converts the supplied Mebibits value to Kibibits
        static member toKibibits(value : float<mebibit>) = kibibit.create(float value * 1024.0)
    and /// Megabits (Mb) units
        [<Measure>] Mb =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<Mb> value
        /// Converts the supplied Megabits value to Bits
        static member toBits(value : float<Mb>) = b.create(float value * 1e+6)
        /// Converts the supplied Megabits value to Kilobits
        static member toKilobits(value : float<Mb>) = k.create(float value * 1000.0)
        /// Converts the supplied Megabits value to Gigabits
        static member toGigabits(value : float<Mb>) = Gb.create(float value / 1000.0)
        /// Converts the supplied Megabits value to Terabits
        static member toTerabits(value : float<Mb>) = Tb.create(float value / 1e+6)
        /// Converts the supplied Megabits value to Kilobytes
        static member toKilobytes(value : float<Mb>) = KB.create(float value * 125.0)
        /// Converts the supplied Megabits value to Megabytes
        static member toMegabytes(value : float<Mb>) = MB.create(float value / 8.0)
        /// Converts the supplied Megabits value to Gigabytes
        static member toGigabytes(value : float<Mb>) = GB.create(float value / 8000.0)
        /// Converts the supplied Megabits value to Terabytes
        static member toTerabytes(value : float<Mb>) = TB.create(float value / 8e+6)
        /// Converts the supplied Megabits value to Kibibits
        static member toKibibits(value : float<Mb>) = kibibit.create(float value * 976.563)
        /// Converts the supplied Megabits value to Mebibits
        static member toMebibits(value : float<Mb>) = mebibit.create(float value / 1.04858)
    and /// Megabytes (MB) units
        [<Measure>] MB =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<MB> value
        /// Converts the supplied Megabytes value to Bits
        static member toBits(value : float<MB>) = b.create(float value * 8e+6)
        /// Converts the supplied Megabytes value to Kilobits
        static member toKilobits(value : float<MB>) = k.create(float value * 8000.0)
        /// Converts the supplied Megabytes value to Megabits
        static member toMegabits(value : float<MB>) = Mb.create(float value * 8.0)
        /// Converts the supplied Megabytes value to Gigabits
        static member toGigabits(value : float<MB>) = Gb.create(float value / 125.0)
        /// Converts the supplied Megabytes value to Terabits
        static member toTerabits(value : float<MB>) = Tb.create(float value / 125000.0)
        /// Converts the supplied Megabytes value to Kilobytes
        static member toKilobytes(value : float<MB>) = KB.create(float value * 1000.0)
        /// Converts the supplied Megabytes value to Gigabytes
        static member toGigabytes(value : float<MB>) = GB.create(float value / 1000.0)
        /// Converts the supplied Megabytes value to Terabytes
        static member toTerabytes(value : float<MB>) = TB.create(float value / 1e+6)
        /// Converts the supplied Megabytes value to Kibibits
        static member toKibibits(value : float<MB>) = kibibit.create(float value * 7812.5)
        /// Converts the supplied Megabytes value to Mebibits
        static member toMebibits(value : float<MB>) = mebibit.create(float value * 7.62939)
    and /// Terabits (Tb) units
        [<Measure>] Tb =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<Tb> value
        /// Converts the supplied Terabits value to Bits
        static member toBits(value : float<Tb>) = b.create(float value * 1e+12)
        /// Converts the supplied Terabits value to Kilobits
        static member toKilobits(value : float<Tb>) = k.create(float value * 1e+9)
        /// Converts the supplied Terabits value to Megabits
        static member toMegabits(value : float<Tb>) = Mb.create(float value * 1e+6)
        /// Converts the supplied Terabits value to Gigabits
        static member toGigabits(value : float<Tb>) = Gb.create(float value * 1000.0)
        /// Converts the supplied Terabits value to Kilobytes
        static member toKilobytes(value : float<Tb>) = KB.create(float value * 1.25e+8)
        /// Converts the supplied Terabits value to Megabytes
        static member toMegabytes(value : float<Tb>) = MB.create(float value * 125000.0)
        /// Converts the supplied Terabits value to Gigabytes
        static member toGigabytes(value : float<Tb>) = GB.create(float value * 125.0)
        /// Converts the supplied Terabits value to Terabytes
        static member toTerabytes(value : float<Tb>) = TB.create(float value / 8.0)
        /// Converts the supplied Terabits value to Kibibits
        static member toKibibits(value : float<Tb>) = kibibit.create(float value * 976562500.0)
        /// Converts the supplied Terabits value to Mebibits
        static member toMebibits(value : float<Tb>) = mebibit.create(float value * 953674.0)
    and /// Terabytes (TB) units
        [<Measure>] TB =
        static member create(value : float) = LanguagePrimitives.FloatWithMeasure<TB> value
        /// Converts the supplied Terabytes value to Bits
        static member toBits(value : float<TB>) = b.create(float value * 8e+12)
        /// Converts the supplied Terabytes value to Kilobits
        static member toKilobits(value : float<TB>) = k.create(float value * 8e+9)
        /// Converts the supplied Terabytes value to Megabits
        static member toMegabits(value : float<TB>) = Mb.create(float value * 8e+6)
        /// Converts the supplied Terabytes value to Gigabits
        static member toGigabits(value : float<TB>) = Gb.create(float value * 8000.0)
        /// Converts the supplied Terabytes value to Terabits
        static member toTerabits(value : float<TB>) = Tb.create(float value * 8.0)
        /// Converts the supplied Terabytes value to Kilobytes
        static member toKilobytes(value : float<TB>) = KB.create(float value * 1e+9)
        /// Converts the supplied Terabytes value to Megabytes
        static member toMegabytes(value : float<TB>) = MB.create(float value * 1e+6)
        /// Converts the supplied Terabytes value to Gigabytes
        static member toGigabytes(value : float<TB>) = GB.create(float value * 1000.0)
        /// Converts the supplied Terabytes value to Kibibits
        static member toKibibits(value : float<TB>) = kibibit.create(float value * 7812500000.0)
        /// Converts the supplied Terabytes value to Mebibits
        static member toMebibits(value : float<TB>) = mebibit.create(float value / 0.000000131072)
